sudo: required
git:
  depth: false
services:
  - docker
env:
  global:
    - DOCKER_USERNAME=travis
jobs:
  include:
    - stage: 'Tests' # naming the Tests stage
      name: 'Unit Tests' # names the first Tests stage job
      language: elixir
      elixir:
        - 1.9
      otp_release:
        - 22.0
      cache:
        directories:
          - _build
          - deps
          - assets/node_modules
      addons:
        chrome: stable
        postgresql: '9.6'
      services:
        - postgresql
      before_script:
        - psql -c 'create database app_template_test;' -U postgres
      install:
        - gem install coveralls-multi
        - mix local.hex --force
        - mix local.rebar --force
        - mix deps.get
        - nvm install 12.4.0 && nvm use 12.4.0
        - npm install --prefix assets
      script:
        - MIX_ENV=test mix coveralls.json
        - npm test --prefix assets
        - bin/ci-coverage
    - stage: 'Tests'
      name: 'Integration Tests'
      language: elixir
      elixir:
        - 1.8
      otp_release:
        - 21.0
      cache:
        directories:
          - _build
          - deps
          - assets/node_modules
      addons:
        chrome: stable
        postgresql: '9.6'
      dist: xenial
      services:
        - postgresql
        - xvfb
      before_script:
        - psql -c 'create database app_template_test;' -U postgres
      before_install:
        - wget https://chromedriver.storage.googleapis.com/78.0.3904.70/chromedriver_linux64.zip
        - unzip chromedriver_linux64.zip
        - sudo apt-get install libnss3
        - sudo cp chromedriver /usr/local/bin/.
        - sudo chmod +x /usr/local/bin/chromedriver
        - pip install --user awscli
        - export PATH=$PATH:$HOME/.local/bin
        - mkdir -p $HOME/src
        - wget http://selenium-release.storage.googleapis.com/2.48/selenium-server-standalone-2.48.2.jar
        - nohup java -Dselenium.LOGGER.level=WARNING -jar selenium-server-standalone-2.48.2.jar > /dev/null 2>&1 &
        - chromedriver > /dev/null 2>&1 &
      install:
        - mix local.hex --force
        - mix local.rebar --force
        - mix deps.get
        - npm install --prefix assets
      script:
        - mix integration_tests
    - stage: docker deploy
      name: 'Deploy'
      if: branch = master
      script: skip
      before_deploy:
        - echo $DOCKER_PASSWORD | docker login harbor.revelry-prod.revelry.net -u $DOCKER_USERNAME --password-stdin
        - export ROLLBAR_DEPLOY_ID=$(./bin/rollbar_release started)
      after_deploy:
        - ./bin/rollbar_release succeeded
      deploy:
        provider: script
        script: bin/docker_pub library/app-template harbor.revelry-prod.revelry.net
        on:
          branch: master
